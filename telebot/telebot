#!/usr/bin/python3 -u

# The -u option in Python runs the interpreter in unbuffered mode.
# That means:
# stdout and stderr are written immediately (no buffering).
# You donâ€™t have to wait for the buffer to fill or for the program to
# exit before print() outputs appear.
# Equivalent to setting the environment variable PYTHONUNBUFFERED=1.
# This is especially useful when running Python scripts under systemd,
# Docker, or when piping output to journalctl, because you want log
# messages from print() to show up in real time.

import os
import sys

from pathlib import Path

current_path = Path(__file__).parent.resolve()
modules_path = (current_path / '../modules').resolve()

os.chdir(current_path)
sys.path.append(str(modules_path))

from common_modules import import_dirs

import_dirs(current_path, ['src', '../deye/src', '../common'])

import telebot
from mytelebot import MyTelebot
from testable_telebot import TestableTelebot

from telebot_credentials import BOT_API_TOKEN
from telebot_send_message import send_private_telegram_message
from telebot_utils import is_test_run

from common_utils import (
  clock_face_two_oclock_emoji,
  large_red_circle_emoji,
)

try:
  if is_test_run():
    token = os.getenv('BOT_API_TOKEN', '')
    bot = TestableTelebot(token)
    telebot = MyTelebot(bot, bot)
  else:
    send_private_telegram_message(f'{clock_face_two_oclock_emoji} Starting telebot...')
    bot = telebot.TeleBot(BOT_API_TOKEN)
    telebot = MyTelebot(bot, None)
  bot.infinity_polling()
except Exception:
  send_private_telegram_message(f'{large_red_circle_emoji} Telebot unexpectedly stopped working')
  raise
